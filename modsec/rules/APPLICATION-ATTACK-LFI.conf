# ------------------------------------------------------------------------
# OWASP CRS 版本 4.13.0-dev
# 版权所有 (c) 2006-2020 Trustwave 和贡献者。保留所有权利。
# 版权所有 (c) 2021-2025 CRS 项目。保留所有权利。
#
# OWASP CRS 根据 Apache 软件许可证 (ASL) 版本 2 分发
# 完整详情请参阅随附的 LICENSE 文件。
# ------------------------------------------------------------------------

#
# -= 极端警觉等级 0 (空) =- (无条件应用)
#

SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:930011,phase:1,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:930012,phase:2,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"

#
# -= 极端警觉等级 1 (默认) =- (仅在 tx.detection_paranoia_level 足够高时应用：1 或更高)
#

#
# -=[ 目录遍历攻击 ]=-
#
# 参考: https://github.com/wireghoul/dotdotpwn
#
# [ 编码的 /../ 有效载荷 ]
#
# 从 regex-assembly/930100.ra 生成的正则表达式。
# 要更新正则表达式，请运行以下 shell 脚本
# （请参阅 https://coreruleset.org/docs/development/regex_assembly/ 了解详细信息）：
#   crs-toolchain regex update 930100
#
SecRule REQUEST_URI_RAW|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer|FILES|XML:/* "@rx (?i)(?:[/\x5c]|%(?:2(?:f|5(?:2f|5c|c(?:1%259c|0%25af))|%46)|5c|c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|(?:bg%q|(?:e|f(?:8%8)?0%8)0%80%a)f|u(?:221[56]|EFC8|F025|002f)|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|1u)|0x(?:2f|5c))(?:\.(?:%0[01]|\?)?|\?\.?|%(?:2(?:(?:5(?:2|c0%25a))?e|%45)|c0(?:\.|%[256aef]e)|u(?:(?:ff0|002)e|2024)|%32(?:%(?:%6|4)5|E)|(?:e|f(?:(?:8|c%80)%8)?0%8)0%80%ae)|0x2e){2,3}(?:[/\x5c]|%(?:2(?:f|5(?:2f|5c|c(?:1%259c|0%25af))|%46)|5c|c(?:0%(?:[2aq]f|5c|9v)|1%(?:[19p]c|8s|af))|(?:bg%q|(?:e|f(?:8%8)?0%8)0%80%a)f|u(?:221[56]|EFC8|F025|002f)|%3(?:2(?:%(?:%6|4)6|F)|5%%63)|1u)|0x(?:2f|5c))" \
    "id:930100,\
    phase:2,\
    block,\
    capture,\
    t:none,\
    msg:'路径遍历攻击 (/../) 或 (/.../)',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}'"

#
# [ 解码后的 /../ 或 /..;/ 有效载荷 ]
#
# 为了防止 '..' 被触发，正则表达式被分成两部分：
# - ../
# - /..
# 或
# - .../
# - /...
#
# 分号被加入以防止通过反向代理映射 '/..;/' 进行路径遍历（Tomcat）
#
SecRule REQUEST_URI_RAW|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer|FILES|XML:/* "@rx (?:(?:^|[\x5c/;])\.{2,3}[\x5c/;]|[\x5c/;]\.{2,3}[\x5c/;])" \
    "id:930110,\
    phase:2,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:removeNulls,t:cmdLine,\
    msg:'路径遍历攻击 (/../) 或 (/.../)',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    multiMatch,\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}'"

#
# -=[ 操作系统文件访问 ]=-
#
# 我们使用包含操作系统文件数据的本地文件来检查操作系统文件访问。
#
# 参考: https://github.com/lightos/Panoptic/blob/master/cases.xml
#
SecRule REQUEST_COOKIES|!REQUEST_COOKIES:/__utm/|REQUEST_COOKIES_NAMES|ARGS_NAMES|ARGS|XML:/* "@pmFromFile lfi-os-files.data" \
    "id:930120,\
    phase:2,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\
    msg:'操作系统文件访问尝试',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    tag:'PCI/6.5.4',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

#
# -=[ 限制文件访问 ]=-
#
# 检测尝试检索应用程序源代码、元数据、
# 凭据和可能在 Web 根目录中可达的版本控制历史记录。
#
SecRule REQUEST_FILENAME "@pmFromFile restricted-files.data" \
    "id:930130,\
    phase:1,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\
    msg:'限制文件访问尝试',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/1',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    tag:'PCI/6.5.4',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl1=+%{tx.critical_anomaly_score}'"

SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:930013,phase:1,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 2" "id:930014,phase:2,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"

#
# -= 极端警觉等级 2 =- (仅在 tx.detection_paranoia_level 足够高时应用：2 或更高)
#

#
# -=[ 操作系统文件访问 ]=-
#
# 这是规则 930120 的更严格版本。
# 这个更严格的版本检查请求头 referer 和 user-agent 中的操作系统文件数据。
# 我们使用包含操作系统文件数据的本地文件来检查操作系统文件访问。
#
SecRule REQUEST_HEADERS:Referer|REQUEST_HEADERS:User-Agent "@pmFromFile lfi-os-files.data" \
    "id:930121,\
    phase:1,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\
    msg:'在请求头中尝试访问操作系统文件',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

#
# -=[ LFI 可控文件目录 ]=-
#
# 在 LFI 攻击中，攻击者通常会通过目录遍历的方式访问文件。
# 在这种情况下，我们检测在请求中包含的文件扩展名。
#

SecRule REQUEST_URI_RAW|ARGS|REQUEST_HEADERS|FILES|XML:/* "@rx \.(?:bash_history|git|php|sh|bash|csh|zsh|ps|git\\config|npm\\_logs)" \
    "id:930140,\
    phase:2,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\
    msg:'可疑的 LFI 文件扩展名',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

#
# 检测 后缀 在原本的规则里面删除掉了php|js|css|html|htm|
#
SecRule REQUEST_URI_RAW|ARGS|REQUEST_HEADERS|FILES|XML:/* "@rx (?:\.(?:cgi|sh|zsh|py|pl|rb|jsp|cfm))" \
    "id:930150,\
    phase:2,\
    block,\
    capture,\
    t:none,t:utf8toUnicode,t:urlDecodeUni,t:normalizePathWin,\
    msg:'外部 LFI 攻击',\
    logdata:'匹配数据: %{TX.0} 在 %{MATCHED_VAR_NAME}: %{MATCHED_VAR} 中找到',\
    tag:'application-multi',\
    tag:'language-multi',\
    tag:'platform-multi',\
    tag:'attack-lfi',\
    tag:'paranoia-level/2',\
    tag:'OWASP_CRS',\
    tag:'OWASP_CRS/ATTACK-LFI',\
    tag:'capec/1000/255/153/126',\
    ver:'OWASP_CRS/4.13.0-dev',\
    severity:'CRITICAL',\
    setvar:'tx.lfi_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl2=+%{tx.critical_anomaly_score}'"

#
# -=[ 完成所有配置 ]=-
#
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:930015,phase:1,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"
SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 3" "id:930016,phase:2,pass,nolog,tag:'OWASP_CRS',ver:'OWASP_CRS/4.13.0-dev',skipAfter:END-REQUEST-930-APPLICATION-ATTACK-LFI"
